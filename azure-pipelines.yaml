variables:
  packageVersion: $(Build.BuildNumber)

resources:
- repo: self
  clean: true

jobs:

# ------- Windows x64 ---------------------------------------------------------
- job: windows_x64
  condition: succeeded()
  pool:
    name: Hosted VS2017
    demands:
    - msbuild
    - visualstudio

  steps:
  - checkout: self
    clean: true
    submodules: true

  - task: PowerShell@2
    displayName: 'Set build number'
    inputs:
      targetType: inline
      workingDirectory: include/mbedtls
      script: |
       $v = @{}
       $path = Join-Path (Get-Location) 'version.h'
       foreach($line in Get-Content -Path $path)
       {
           $m = [regex]::Match($line, '#define[\t\s]+([1-9a-zA-Z_]+)[\t\s]+(.*)')
           if($m.Success)
           {
               $v.Add($m.Groups[1].Value, $m.Groups[2].Value.Trim())
           }
       }
       $version = "$($v['MBEDTLS_VERSION_MAJOR']).$($v['MBEDTLS_VERSION_MINOR']).$($v['MBEDTLS_VERSION_PATCH']).$($Env:BUILD_BUILDID)"
       Write-Host "##vso[build.updatebuildnumber]$version"
       Write-Host "##vso[task.setvariable variable=packageVersion]$version"

  - task: CMake@1
    displayName: 'Cmake x64'
    inputs:
      cmakeArgs: '. -G "Visual Studio 15 2017" -A x64 -DENABLE_TESTING=OFF -DUSE_SHARED_MBEDTLS_LIBRARY=ON'
      workingDirectory: .
      
  - task: CMake@1
    displayName: 'Compile'
    inputs:
      cmakeArgs: '--build . --config Release'
      workingDirectory: .

  - task: CmdLine@2
    displayName: 'Run tests x64'
    inputs:
      script: 'programs\test\Release\selftest.exe'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: 'crypto\library\Release'
      artifactName: win-x64

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: 'library\Release'
      artifactName: win-x64

# ------- Linux -------------------------------------------------------------
- job: linux_x64
  condition: succeeded()
  pool:
    name: Hosted Ubuntu 1604
  steps:
  - checkout: self
    clean: true
    submodules: true
    
  - task: CMake@1
    displayName: 'Generate project'
    inputs:
      cmakeArgs: '. -DENABLE_TESTING=ON -DUSE_SHARED_MBEDTLS_LIBRARY=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_LIBRARY_OUTPUT_DIRECTORY=$(Build.ArtifactStagingDirectory)'
      workingDirectory: .

  - task: Bash@3
    displayName: 'Build'
    inputs:
      targetType: inline
      script: make

  - task: Bash@3
    displayName: 'Test'
    inputs:
      targetType: inline
      script: make test
      
  - task: PublishBuildArtifacts@1
    inputs:
      artifactName: linux-x64

# ------- Darwin -------------------------------------------------------------
- job: osx
  condition: succeeded()
  pool:
    name: Hosted macOS High Sierra
  steps:
  - checkout: self
    clean: true
    submodules: true

  - task: CMake@1
    displayName: 'Generate project'
    inputs:
      cmakeArgs: '. -G Xcode -DENABLE_TESTING=ON -DUSE_SHARED_MBEDTLS_LIBRARY=ON -DCMAKE_BUILD_TYPE=Release'
      workingDirectory: .

  - task: CMake@1
    displayName: 'Compile'
    inputs:
      cmakeArgs: '--build . --config Release'
      workingDirectory: .

  - task: Bash@3
    displayName: 'Test'
    inputs:
      targetType: inline
      script: make test
      
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: 'crypto/library/Release'
      artifactName: osx

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: 'library/Release'
      artifactName: osx

